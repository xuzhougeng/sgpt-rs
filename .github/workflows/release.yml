name: release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: sgpt-linux
            bin_path: target/release/sgpt
            pack_cmd: |
              set -e
              mkdir -p dist
              cp target/release/sgpt dist/sgpt
              ARCH=$(uname -m)
              PKG=sgpt-${{ github.ref_name }}-linux-$ARCH.tar.gz
              tar -czf "$PKG" -C dist sgpt
              sha256sum "$PKG" | awk '{print $1}' > "$PKG.sha256"
          - os: macos-latest
            artifact_name: sgpt-macos
            bin_path: target/release/sgpt
            pack_cmd: |
              set -e
              mkdir -p dist
              cp target/release/sgpt dist/sgpt
              ARCH=$(uname -m)
              PKG=sgpt-${{ github.ref_name }}-macos-$ARCH.tar.gz
              tar -czf "$PKG" -C dist sgpt
              shasum -a 256 "$PKG" | awk '{print $1}' > "$PKG.sha256"
          - os: windows-latest
            artifact_name: sgpt-windows
            bin_path: target\\release\\sgpt.exe
            pack_cmd: |
              mkdir dist
              copy target\\release\\sgpt.exe dist\\sgpt.exe
              powershell -Command "$arch = if ($env:PROCESSOR_ARCHITECTURE -eq 'AMD64') { 'x86_64' } elseif ($env:PROCESSOR_ARCHITECTURE -eq 'ARM64') { 'arm64' } else { $env:PROCESSOR_ARCHITECTURE }; $pkg = \"sgpt-${{ github.ref_name }}-windows-$arch.zip\"; Compress-Archive -Path dist\\sgpt.exe -DestinationPath $pkg; (Get-FileHash $pkg -Algorithm SHA256).Hash | Out-File -Encoding ascii \"$pkg.sha256\""

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build release
        run: cargo build --release --locked

      - name: Package artifact
        run: ${{ matrix.pack_cmd }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            *.tar.gz
            *.zip
            *.sha256

  release:
    name: publish
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/sgpt-*.tar.gz
            artifacts/**/sgpt-*.zip
            artifacts/**/sgpt-*.sha256
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
